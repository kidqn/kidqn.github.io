{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","cashCheck","cashMethod","cardCheck","cardMethod","cardBank","transferCheck","transferMethod","transferBank","theKIMCode","theKIMPIN","restMoneyPay","insurance","insuranceCheck","insuranceService","insuranceServicePrice","insuranceServicePayMoney","companyCheck","company","companyService","companyServicePrice","companyServicePayMoney","keynote","isConfirm","handleInputChange","bind","assertThisInitialized","handleConfirm","handleSubmit","handleShowTableResult","calcRestMoney","calcMoneyPay","event","type","target","value","checked","parseInt","toCurrency","name","setState","defineProperty","console","log","preventDefault","key","inputNumber","replace","currency","Number","convertCurrencyToNumber","newRestMoney","newMoneyPay","MoneyPay","_this2","isShowMethodTable","isShowInsuranceTable","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","Body","id","Group","Label","Control","onChange","e","onBlur","placeholder","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","Fragment","theKIMCheck","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31221ad6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nexport default class PhieuThuPopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openPayMethod: true,\r\n            openInsuranceMethod: false,\r\n            totalMoneyPay: 45000000,\r\n            moneyPay: '',\r\n            cashCheck: false,\r\n            cashMethod: null,\r\n            cardCheck: false,\r\n            cardMethod: null,\r\n            cardBank: '',\r\n            transferCheck: false,\r\n            transferMethod: null,\r\n            transferBank: '',\r\n            theKIMCode: '',\r\n            theKIMPIN:'',\r\n            restMoneyPay: 45000000,\r\n            insurance: '',\r\n            insuranceCheck: false,\r\n            insuranceService: '',\r\n            insuranceServicePrice: null,\r\n            insuranceServicePayMoney: null,\r\n            companyCheck: false,\r\n            company: '',\r\n            companyService: '',\r\n            companyServicePrice: null,\r\n            companyServicePayMoney: null,\r\n            keynote: '',\r\n            isConfirm: false\r\n        };\r\n    \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleConfirm = this.handleConfirm.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleShowTableResult = this.handleShowTableResult.bind(this);\r\n        this.calcRestMoney = this.calcRestMoney.bind(this);\r\n        this.calcMoneyPay = this.calcMoneyPay.bind(this);\r\n      }\r\n\r\n    handleInputChange(event, type) {\r\n        const target = event.target;\r\n        let value =  target.value;\r\n        if(target.type === 'checkbox') {\r\n            value = target.checked;\r\n        }\r\n        if(target.type === 'number') {\r\n            value = parseInt(target.value)\r\n        }\r\n        if(type && type ==='currency') {\r\n            value = this.toCurrency(value)\r\n        }\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value \r\n        }, () => {\r\n\r\n        });\r\n    }\r\n\r\n    handleConfirm(event) {\r\n        console.log('Note: ' + this.state.keynote);\r\n        console.log('Cash method: ' + this.state.cashMethod);\r\n        console.log('Card: ' + this.state.cardMethod , this.state.cardBank);\r\n        console.log('Transfer: ' + this.state.transferMethod , this.state.transferBank);\r\n        event.preventDefault();\r\n        this.setState({\r\n            isConfirm: !this.state.isConfirm,\r\n            openPayMethod: true,\r\n            openInsuranceMethod: false\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        console.log('push to server');\r\n        event.preventDefault();\r\n    }\r\n    handleShowTableResult(key) {\r\n        if( key === 'openPayMethod') {\r\n            this.setState({\r\n                openPayMethod: !this.state.openPayMethod,\r\n                openInsuranceMethod: this.state.openPayMethod ? this.state.openInsuranceMethod :this.state.openPayMethod\r\n            })\r\n        }\r\n        if( key === 'openInsuranceMethod') {\r\n            this.setState({\r\n                openInsuranceMethod: !this.state.openInsuranceMethod,\r\n                openPayMethod: this.state.openInsuranceMethod ? this.state.openPayMethod :this.state.openInsuranceMethod\r\n            })\r\n        }\r\n    }\r\n\r\n    toCurrency(inputNumber) {\r\n        const temp = '' + inputNumber;\r\n        const formatter = temp.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    \r\n        return formatter;\r\n    }\r\n    convertCurrencyToNumber(currency) {\r\n        if(!currency) {\r\n            return 0;\r\n        }\r\n        return Number(currency.replace(/[^0-9\\.-]+/g,\"\"));\r\n    }\r\n    calcRestMoney() {\r\n        const moneyPay = this.state.moneyPay ? this.convertCurrencyToNumber(this.state.moneyPay) : 0;\r\n        const newRestMoney = this.state.totalMoneyPay - moneyPay;\r\n        this.setState({restMoneyPay: newRestMoney});\r\n    }\r\n    calcMoneyPay() {\r\n        const moneyPay = this.state.moneyPay ? this.convertCurrencyToNumber(this.state.moneyPay) : 0;\r\n        const cashMethod = this.state.cashMethod ? this.convertCurrencyToNumber(this.state.cashMethod) : 0;\r\n        const cardMethod = this.state.cardMethod ? this.convertCurrencyToNumber(this.state.cardMethod) : 0;\r\n        const transferMethod = this.state.transferMethod ? this.convertCurrencyToNumber(this.state.transferMethod) : 0;\r\n        const insuranceServicePrice = this.state.insuranceServicePrice ? this.convertCurrencyToNumber(this.state.insuranceServicePrice) : 0;\r\n        const companyServicePrice = this.state.companyServicePrice ? this.convertCurrencyToNumber(this.state.companyServicePrice) : 0;\r\n        const newMoneyPay = moneyPay - (cashMethod + cardMethod + transferMethod + insuranceServicePrice + companyServicePrice);\r\n        this.setState({MoneyPay: newMoneyPay});\r\n    }\r\n\r\n    render() {\r\n        const isShowMethodTable = !this.state.openPayMethod && (this.state.cashCheck || this.state.cardCheck || this.state.transferCheck);\r\n        const isShowInsuranceTable = !this.state.openInsuranceMethod && (this.state.insuranceCheck || this.state.companyCheck);\r\n\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"phieuthu\"\r\n            >                \r\n            <Form \r\n                noValidate\r\n                onSubmit={this.handleSubmit}>\r\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\r\n                        <Modal.Title>\r\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\r\n                        </Modal.Title>\r\n                        <div className=\"right-side\">\r\n                            <div className=\"chi-nhanh\">\r\n                                <p>Chi nhánh</p>\r\n                                <h4>31NDC.001</h4>\r\n                            </div>\r\n                            <div className=\"thanh-toan\">\r\n                                <p>Cần thanh toán</p>\r\n                                <h4>{this.toCurrency(this.state.totalMoneyPay)}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"phieuthu-body\">\r\n                    {!this.state.isConfirm ? (\r\n                    <section id=\"phieuthu-step1\">\r\n\r\n                        <section id=\"section-thanh-toan\">\r\n                            <Form.Group>\r\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\r\n                                    <div className=\"field-input\">\r\n                                        <span>Số tiền</span>\r\n                                        <Form.Control name=\"moneyPay\" \r\n                                            value={this.state.moneyPay}\r\n                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                            onBlur={this.calcRestMoney}\r\n                                            placeholder=\"1,000,000\" type=\"text\" />\r\n                                    </div>\r\n                                    <div className=\"field-input rest-money\">\r\n                                        <span>Còn lại</span>\r\n                                        <Form.Control \r\n                                            value={this.toCurrency(this.state.restMoneyPay)}\r\n                                            placeholder=\"1,000,000\" type=\"text\" disabled/>\r\n                                    </div>\r\n                            </Form.Group>\r\n                        </section>\r\n\r\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\r\n                        <section id=\"section-phuongthuc\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleShowTableResult('openPayMethod')}>\r\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <div className=\"section-phuongthuc-wrapper\">\r\n                                    <Form.Group controlId=\"cashCheckbox\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" \r\n                                                   className=\"custom-control-input\" id=\"cashCheck\"\r\n                                                   name=\"cashCheck\"\r\n                                                   checked={this.state.cashCheck}\r\n                                                   onChange={this.handleInputChange} \r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt</label>\r\n                                        </div>                                        \r\n                                        {this.state.cashCheck && \r\n                                            <React.Fragment>\r\n                                                <div className=\"field-input\">\r\n                                                    <span>Số tiền:</span>\r\n                                                    <Form.Control name=\"cashMethod\" \r\n                                                        value={this.state.cashMethod}\r\n                                                        onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                                        onBlur={this.calcMoneyPay}\r\n                                                        placeholder=\"10,000,000\" type=\"text\" />\r\n                                                    \r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"group-card\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" \r\n                                                    className=\"custom-control-input\" id=\"cardCheck\"\r\n                                                    name=\"cardCheck\"\r\n                                                    checked={this.state.cardCheck}\r\n                                                    onChange={this.handleInputChange}/>\r\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ</label>\r\n                                        </div> \r\n                                        {this.state.cardCheck && \r\n                                            <React.Fragment>\r\n                                                <div className=\"field-input\">\r\n                                                    <span>Số tiền:</span>\r\n                                                    <div className=\"field-input\">\r\n                                                        <span>Số tiền</span>\r\n                                                        <Form.Control name=\"cardMethod\" \r\n                                                            value={this.state.cardMethod}\r\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                                            onBlur={this.calcMoneyPay}\r\n                                                            placeholder=\"10,000,000\" type=\"text\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Ngân hàng:</span>\r\n                                                    <Form.Control as=\"select\"  name=\"cardBank\" value={this.state.cardBank} onChange={this.handleInputChange}>\r\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\r\n                                                        <option value=\"VNPT QR Code\">VNPT QR Code</option>\r\n                                                        <option value=\"FPT QR Code\">FPT QR Code</option>\r\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\r\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\r\n                                                    </Form.Control>\r\n                                                </div> \r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"group-transfer\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" \r\n                                                className=\"custom-control-input\" id=\"transferCheck\"\r\n                                                name=\"transferCheck\"\r\n                                                checked={this.state.transferCheck}\r\n                                                onChange={this.handleInputChange}/>\r\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản</label>\r\n                                        </div>\r\n                                        {this.state.transferCheck && \r\n                                            <React.Fragment>\r\n                                                <div className=\"field-input\">\r\n                                                    <span>Số tiền:</span>\r\n                                                    <div className=\"field-input\">\r\n                                                        <span>Số tiền</span>\r\n                                                        <Form.Control name=\"transferMethod\" \r\n                                                            value={this.state.transferMethod}\r\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                                            onBlur={this.calcMoneyPay}\r\n                                                            placeholder=\"10,000,000\" type=\"text\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Ngân hàng:</span>\r\n                                                    <Form.Control as=\"select\"  name=\"transferBank\" value={this.state.transferBank} onChange={this.handleInputChange}>\r\n                                                        <option value=\"VCB Biên Hòa\">VCB Biên Hòa</option>\r\n                                                        <option value=\"BIDV HCM\">BIDV HCM</option>\r\n                                                        <option value=\"Vietin Bank\">Vietin Bank</option>\r\n                                                        <option value=\"ACB\">ACB</option>\r\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"group-thekim\" controlId=\"theKIMCheckbox\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" \r\n                                                   className=\"custom-control-input\" id=\"theKIMCheck\"\r\n                                                   name=\"theKIMCheck\"\r\n                                                   checked={this.state.theKIMCheck}\r\n                                                   onChange={this.handleInputChange} \r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"theKIMCheck\">Thẻ KIM</label>\r\n                                        </div>                                        \r\n                                        {this.state.theKIMCheck && \r\n                                            <React.Fragment>\r\n                                                <div className=\"field-input no-label thekim-code\">\r\n                                                    <Form.Control \r\n                                                        name=\"theKIMCode\"\r\n                                                        value={this.state.theKIMCode}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        placeholder=\"Nhập mã thẻ\" type=\"text\" />\r\n                                                </div>\r\n                                                <div className=\"field-input no-label thekim-pin\">\r\n                                                    <Form.Control \r\n                                                        name=\"theKIMPIN\"\r\n                                                        value={this.state.theKIMPIN}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        placeholder=\"Mã PIN\" type=\"text\" />\r\n                                                </div>\r\n                                                <div className=\"field-input thekim-btn\">\r\n                                                    <button className=\"btn btn-primary\">KIỂM TRA MÃ PIN</button>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </Accordion.Collapse>\r\n                                {isShowMethodTable && \r\n                                    <React.Fragment>\r\n                                        <div className=\"table-result\">\r\n                                            {this.state.cashCheck && <div className=\"result-row\">\r\n                                                <div className=\"result-col label\">\r\n                                                    Tiền mặt\r\n                                                </div>\r\n                                                <div className=\"result-col\">\r\n                                                    \r\n                                                </div>\r\n                                                <div className=\"result-col number\">\r\n                                                    <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                            {this.state.cardCheck && <div className=\"result-row\">\r\n                                                <div className=\"result-col label\">\r\n                                                    Thẻ\r\n                                                </div>\r\n                                                <div className=\"result-col\">\r\n                                                    <p className=\"head\">{this.state.cardBank}</p>\r\n                                                </div>\r\n                                                <div className=\"result-col number\">\r\n                                                    <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                            {this.state.transferCheck && <div className=\"result-row\">\r\n                                                <div className=\"result-col label\">\r\n                                                    Chuyển khoản\r\n                                                </div>\r\n                                                <div className=\"result-col\">\r\n                                                    <p className=\"head\">{this.state.transferBank}</p>\r\n                                                </div>\r\n                                                <div className=\"result-col number\">\r\n                                                    <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                }\r\n                        </section>\r\n\r\n                        <section id=\"section-insurance\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleShowTableResult('openInsuranceMethod')}>\r\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                                <section className=\"section-insurance-wrapper\">\r\n                                    <Form.Group className=\"insurance\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input  type=\"checkbox\"\r\n                                                   className=\"custom-control-input\" id=\"insuranceCheck\"\r\n                                                   name=\"insuranceCheck\"\r\n                                                   checked={this.state.insuranceCheck}\r\n                                                   onChange={this.handleInputChange} \r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\r\n                                        </div> \r\n                                        {this.state.insuranceCheck && <div className=\"right-side\">\r\n                                            <div className=\"form-group-row\">\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Công ty:</span>\r\n                                                    <Form.Control as=\"select\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange}>\r\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\r\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\r\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\r\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\r\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group-row\">\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Dịch vụ:</span>\r\n                                                    <Form.Control as=\"select\" name=\"insuranceService\" value={this.state.insuranceService} onChange={this.handleInputChange}>\r\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\r\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\r\n                                                        <option value=\"Kem ống\">Kem ống</option>\r\n                                                        <option value=\"Kem chải\">Kem chải</option>\r\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                                <div className=\"field-input\">\r\n                                                    <span>Số tiền</span>\r\n                                                    <div className=\"field-input\">\r\n                                                        <span>Số tiền</span>\r\n                                                        <Form.Control name=\"insuranceServicePrice\" \r\n                                                            value={this.state.insuranceServicePrice}\r\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                                            onBlur={this.calcMoneyPay}\r\n                                                            placeholder=\"10,000,000\" type=\"text\" />\r\n                                                    </div>                                               \r\n                                                </div>\r\n                                                <i className=\"ic ic-remove\"></i>\r\n                                            </div>\r\n                                            <div className=\"form-group-row\">\r\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"company\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input  type=\"checkbox\"\r\n                                                   className=\"custom-control-input\" id=\"companyCheck\"\r\n                                                   name=\"companyCheck\"\r\n                                                   checked={this.state.companyCheck}\r\n                                                   onChange={this.handleInputChange} \r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\r\n                                        </div> \r\n                                        {this.state.companyCheck && <div className=\"right-side\">\r\n                                            <div className=\"form-group-row\">\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Công ty:</span>\r\n                                                    <Form.Control as=\"select\" name=\"company\" value={this.state.company} onChange={this.handleInputChange}>\r\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\r\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\r\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\r\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\r\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group-row\">\r\n                                                <div className=\"field-input select\">\r\n                                                    <span>Dịch vụ:</span>\r\n                                                    <Form.Control as=\"select\" name=\"companyService\" value={this.state.companyService} onChange={this.handleInputChange}>\r\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\r\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\r\n                                                        <option value=\"Kem ống\">Kem ống</option>\r\n                                                        <option value=\"Kem chải\">Kem chải</option>\r\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                                <div className=\"field-input\">\r\n                                                    <span>Số tiền</span>\r\n                                                    <div className=\"field-input\">\r\n                                                        <span>Số tiền</span>\r\n                                                        <Form.Control name=\"companyServicePrice\" \r\n                                                            value={this.state.companyServicePrice}\r\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\r\n                                                            onBlur={this.calcMoneyPay}\r\n                                                            placeholder=\"10,000,000\" type=\"text\" />\r\n                                                    </div>                                               \r\n                                                </div>\r\n                                                <i className=\"ic ic-remove\"></i>\r\n                                            </div>\r\n                                            <div className=\"form-group-row\">\r\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </Form.Group>\r\n                                </section>\r\n                            </Accordion.Collapse>\r\n                            {isShowInsuranceTable && \r\n                                <React.Fragment>\r\n                                    <div className=\"table-result\">\r\n                                        {this.state.insuranceCheck && <div className=\"result-row\">\r\n                                            <div className=\"result-col label\">\r\n                                                Bảo hiểm\r\n                                            </div>\r\n                                            <div className=\"result-col\">\r\n                                                <p className=\"head\">{this.state.insurance}</p>\r\n                                                <p className=\"sub\">{this.state.insuranceService}</p>\r\n                                            </div>\r\n                                            <div className=\"result-col number\">\r\n                                                <p className=\"head\">{this.toCurrency(this.state.insuranceServicePayMoney)}</p>\r\n                                                <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\r\n                                            </div>\r\n                                        </div>}\r\n                                        {this.state.companyCheck && <div className=\"result-row\">\r\n                                            <div className=\"result-col label\">\r\n                                                Công ty\r\n                                            </div>\r\n                                            <div className=\"result-col\">\r\n                                                <p className=\"head\">{this.state.company}</p>\r\n                                                <p className=\"sub\">{this.state.companyService}</p>\r\n                                            </div>\r\n                                            <div className=\"result-col number\">\r\n                                                <p className=\"head\">{this.toCurrency(this.state.companyServicePayMoney)}</p>\r\n                                                <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            }\r\n                        </section>\r\n                        </Accordion>\r\n                        <section id=\"ghichu\">\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Ghi chú</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\" \r\n                                        name=\"keynote\"\r\n                                        value={this.state.keynote}\r\n                                        onChange={this.handleInputChange}/>\r\n                            </Form.Group>\r\n                        </section>\r\n                    </section> \r\n                    ) :\r\n                    (<section id=\"phieuthu-step2\">\r\n                            <div className=\"table-result\">\r\n                                <div className=\"result-row\">\r\n                                    <div className=\"result-col label\">\r\n                                        <p className=\"sub\">Ghi chú</p>\r\n                                        <p>{this.state.keynote}</p>\r\n                                    </div>\r\n                                    <div className=\"result-col number\">\r\n                                        <p className=\"sub\">Khách thanh toán</p>\r\n                                        <p className=\"head\">\r\n                                            {this.toCurrency(this.state.moneyPay)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\r\n                            <div className=\"table-result\">\r\n                                {this.state.cashCheck && <div className=\"result-row\">\r\n                                    <div className=\"result-col label\">\r\n                                        Tiền mặt\r\n                                    </div>\r\n                                    <div className=\"result-col\">\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"result-col number\">\r\n                                        <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                                {this.state.cardCheck && <div className=\"result-row\">\r\n                                    <div className=\"result-col label\">\r\n                                        Thẻ\r\n                                    </div>\r\n                                    <div className=\"result-col\">\r\n                                        <p className=\"head\">{this.state.cardBank}</p>\r\n                                    </div>\r\n                                    <div className=\"result-col number\">\r\n                                        <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                                {this.state.transferCheck && <div className=\"result-row\">\r\n                                    <div className=\"result-col label\">\r\n                                        Chuyển khoản\r\n                                    </div>\r\n                                    <div className=\"result-col\">\r\n                                        <p className=\"head\">{this.state.transferBank}</p>\r\n                                    </div>\r\n                                    <div className=\"result-col number\">\r\n                                        <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n\r\n                            <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\r\n                            <div className=\"table-result\">\r\n                            {this.state.insuranceCheck && <div className=\"result-row\">\r\n                                <div className=\"result-col label\">\r\n                                    Bảo hiểm\r\n                                </div>\r\n                                <div className=\"result-col\">\r\n                                    <p className=\"head\">{this.state.insurance}</p>\r\n                                    <p className=\"sub\">{this.state.insuranceService}</p>\r\n                                </div>\r\n                                <div className=\"result-col number\">\r\n                                    <p className=\"head\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\r\n                                    <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\r\n                                </div>\r\n                            </div>}\r\n                            {this.state.companyCheck && <div className=\"result-row\">\r\n                                <div className=\"result-col label\">\r\n                                    Công ty\r\n                                </div>\r\n                                <div className=\"result-col\">\r\n                                    <p className=\"head\">{this.state.company}</p>\r\n                                    <p className=\"sub\">{this.state.companyService}</p>\r\n                                </div>\r\n                                <div className=\"result-col number\">\r\n                                    <p className=\"head\">{this.toCurrency(this.state.companyServicePrice)}</p>\r\n                                    <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        </section>\r\n                    )}\r\n                    </Modal.Body>\r\n                        {this.state.isConfirm ?\r\n                        (\r\n                            <Modal.Footer>\r\n                                <Button className=\"btn-close\" onClick={this.handleConfirm}>Quay lại</Button>\r\n                                <Button className=\"btn-submit\" type=\"submit\">Tạo phiếu thu</Button>\r\n                            </Modal.Footer>                       \r\n                        ) : (\r\n                            <Modal.Footer>\r\n                                <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\r\n                                <Button className=\"btn-submit\" type=\"button\" onClick={this.handleConfirm}>Xác nhận</Button>\r\n                            </Modal.Footer>\r\n                        )}\r\n            </Form>\r\n            </Modal>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PhieuThuPopup from './phieuthu/phieuthu';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch vertically centered modal\r\n        </Button>\r\n\r\n        <PhieuThuPopup\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}