{"version":3,"sources":["Map.js","App.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","useState","lng","setLng","lat","setLat","zoom","setZoom","map","setMap","useEffect","container","current","style","center","start","addControl","NavigationControl","on","getCenter","toFixed","getZoom","getRoute","addLayer","event","coords","Object","keys","lngLat","key","end","getLayer","getSource","setData","remove","a","fetch","method","query","json","data","routes","route","geometry","coordinates","geojson","className","onClick","alert","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11f32eb7.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './Map.css';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  const [map, setMap] = useState(null);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    setMap(map);\n    const start = [108.9407,  13.8199];\n    const dest = [109.0994, 12.2720];\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n    map.on('load', () => {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n\n      // Add destination to the map\n      map.addLayer({\n        'id': 'point',\n        'type': 'circle',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'FeatureCollection',\n            'features': [\n              {\n                'type': 'Feature',\n                'properties': {},\n                'geometry': {\n                  'type': 'Point',\n                  'coordinates': start\n                }\n              }\n            ]\n          }\n        },\n        'paint': {\n          'circle-radius': 10,\n          'circle-color': '#3887be'\n        }\n      });\n\n      // allow the user to click the map to change the destination\n      map.on('click', (event) => {\n        const coords = Object.keys(event.lngLat).map(\n          (key) => event.lngLat[key]\n        );\n        const end = {\n          'type': 'FeatureCollection',\n          'features': [\n            {\n              'type': 'Feature',\n              'properties': {},\n              'geometry': {\n                'type': 'Point',\n                'coordinates': coords\n              }\n            }\n          ]\n        };\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            'id': 'end',\n            'type': 'circle',\n            'source': {\n              'type': 'geojson',\n              'data': {\n                'type': 'FeatureCollection',\n                'features': [\n                  {\n                    'type': 'Feature',\n                    'properties': {},\n                    'geometry': {\n                      'type': 'Point',\n                      'coordinates': coords\n                    }\n                  }\n                ]\n              }\n            },\n            'paint': {\n              'circle-radius': 10,\n              'circle-color': '#f30'\n            }\n          });\n        }\n        getRoute(coords);\n      });\n    });\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  const getRoute = async (end) => {\n    const start = [108.9407,  13.8199];\n    // make directions request using cycling profile\n    const query = await fetch(\n      `https://api.mapbox.com/directions/v5/mapbox/cycling/${start[0]},${start[1]};${end[0]},${end[1]}?steps=true&geometries=geojson&access_token=${mapboxgl.accessToken}`,\n      { method: 'GET' }\n    );\n    const json = await query.json();\n    const data = json.routes[0];\n    const route = data.geometry.coordinates;\n    const geojson = {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': route\n      }\n    };\n    // if the route already exists on the map, we'll reset it using setData\n    if (map && map.getSource('route')) {\n      map.getSource('route').setData(geojson);\n    }\n    // otherwise, we'll make a new request\n    else if(map) {\n      map.addLayer({\n        'id': 'route',\n        'type': 'line',\n        'source': {\n          'type': 'geojson',\n          'data': geojson\n        },\n        'layout': {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#3887be',\n          'line-width': 5,\n          'line-opacity': 0.75\n        }\n      });\n    }\n  }\n  const clickMe = () => {\n    alert('aaa')\n    getRoute([98.1203, 15.2061])\n  }\n  return (\n    <div>\n      <div className='sidebarStyle'>\n        <button onClick={clickMe}>Click me</button>\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}