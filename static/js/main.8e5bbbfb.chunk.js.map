{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","cashCheck","cashMethod","cardCheck","cardMethod","cardBank","transferCheck","transferMethod","transferBank","theKIMCode","theKIMPIN","restMoneyPay","insurance","insuranceCheck","insuranceService","insuranceServicePrice","insuranceServicePayMoney","companyCheck","company","companyService","companyServicePrice","companyServicePayMoney","keynote","isConfirm","validated","validatedRestMoney","validatedIsEnoughMoneyPay","handleInputChange","bind","assertThisInitialized","handleConfirm","handleSubmit","handleShowTableResult","calcRestMoney","event","type","target","value","checked","parseInt","toCurrency","name","setState","defineProperty","console","log","preventDefault","stopPropagation","form","currentTarget","checkValidity","key","inputNumber","replace","currency","Number","newRestMoney","convertCurrencyToNumber","newValidateRestMoney","_this2","isShowMethodTable","isShowInsuranceTable","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","Body","id","Fragment","Group","Label","Control","onChange","e","onBlur","required","placeholder","Feedback","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","defaultValue","theKIMCheck","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e5bbbfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nexport default class PhieuThuPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openPayMethod: true,\n            openInsuranceMethod: false,\n            totalMoneyPay: 45000000,\n            moneyPay: '',\n            cashCheck: false,\n            cashMethod: null,\n            cardCheck: false,\n            cardMethod: null,\n            cardBank: '',\n            transferCheck: false,\n            transferMethod: null,\n            transferBank: '',\n            theKIMCode: '',\n            theKIMPIN:'',\n            restMoneyPay: '',\n            insurance: '',\n            insuranceCheck: false,\n            insuranceService: '',\n            insuranceServicePrice: null,\n            insuranceServicePayMoney: null,\n            companyCheck: false,\n            company: '',\n            companyService: '',\n            companyServicePrice: null,\n            companyServicePayMoney: null,\n            keynote: '',\n            isConfirm: false,\n            validated: false,\n            validatedRestMoney: true,\n            validatedIsEnoughMoneyPay: false\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleShowTableResult = this.handleShowTableResult.bind(this);\n        this.calcRestMoney = this.calcRestMoney.bind(this);\n      }\n\n    handleInputChange(event, type) {\n        const target = event.target;\n        let value =  target.value;\n        if(target.type === 'checkbox') {\n            value = target.checked;\n        }\n        if(target.type === 'number') {\n            value = parseInt(target.value)\n        }\n        if(type && type ==='currency') {\n            value = this.toCurrency(value)\n        }\n        const name = target.name;\n\n        this.setState({\n            [name]: value \n        }, () => {\n\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Note: ' + this.state.keynote);\n        console.log('Cash method: ' + this.state.cashMethod);\n        console.log('Card: ' + this.state.cardMethod , this.state.cardBank);\n        console.log('Transfer: ' + this.state.transferMethod , this.state.transferBank);\n        event.preventDefault();\n        console.log('Tao phieu thu here');\n    }\n    handleConfirm(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if(!this.state.isConfirm) {\n            // if being in step 1\n            const form = event.currentTarget;\n            console.log('form status', form.checkValidity());\n            if (form.checkValidity() === false || !this.state.validatedRestMoney || !this.state.validatedIsEnoughMoneyPay) {\n                this.setState({ \n                    validated: true,\n                });\n            } else {\n                this.setState({\n                    validated: true,\n                    isConfirm: !this.state.isConfirm,\n                    openPayMethod: true,\n                    openInsuranceMethod: false\n                });\n            }\n\n        } else {\n            this.setState({\n                isConfirm: !this.state.isConfirm,\n                openPayMethod: true,\n                openInsuranceMethod: false\n            });\n        }\n\n    }\n\n    handleShowTableResult(key) {\n        if( key === 'openPayMethod') {\n            this.setState({\n                openPayMethod: !this.state.openPayMethod,\n                openInsuranceMethod: this.state.openPayMethod ? this.state.openInsuranceMethod :this.state.openPayMethod\n            })\n        }\n        if( key === 'openInsuranceMethod') {\n            this.setState({\n                openInsuranceMethod: !this.state.openInsuranceMethod,\n                openPayMethod: this.state.openInsuranceMethod ? this.state.openPayMethod :this.state.openInsuranceMethod\n            })\n        }\n    }\n\n    toCurrency(inputNumber) {\n        const temp = '' + inputNumber;\n        const formatter = temp.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    \n        return formatter;\n    }\n    convertCurrencyToNumber(currency) {\n        if(!currency) {\n            return 0;\n        }\n        return Number(currency.replace(/[^0-9\\.-]+/g,\"\"));\n    }\n    calcRestMoney() {\n        const moneyPay = this.state.moneyPay ? this.convertCurrencyToNumber(this.state.moneyPay) : 0;\n        const cashMethod = this.state.cashMethod ? this.convertCurrencyToNumber(this.state.cashMethod) : 0;\n        const cardMethod = this.state.cardMethod ? this.convertCurrencyToNumber(this.state.cardMethod) : 0;\n        const transferMethod = this.state.transferMethod ? this.convertCurrencyToNumber(this.state.transferMethod) : 0;\n        const insuranceServicePrice = this.state.insuranceServicePrice ? this.convertCurrencyToNumber(this.state.insuranceServicePrice) : 0;\n        const companyServicePrice = this.state.companyServicePrice ? this.convertCurrencyToNumber(this.state.companyServicePrice) : 0;\n        const newRestMoney = moneyPay - (cashMethod + cardMethod + transferMethod + insuranceServicePrice + companyServicePrice);\n        const newValidateRestMoney = newRestMoney < 0 ? false : true;\n\n        this.setState({\n            restMoneyPay: newValidateRestMoney ? newRestMoney : 0,\n            validatedRestMoney: newValidateRestMoney,\n            validatedIsEnoughMoneyPay: newRestMoney === 0 ? true : false\n        });\n    }\n\n    render() {\n        const { validated } = this.state;\n        const isShowMethodTable = !this.state.openPayMethod && (this.state.cashCheck || this.state.cardCheck || this.state.transferCheck);\n        const isShowInsuranceTable = !this.state.openInsuranceMethod && (this.state.insuranceCheck || this.state.companyCheck);\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"phieuthu\"\n            >                \n            <Form \n                noValidate\n                validated={validated}\n                onSubmit={this.handleConfirm}>\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\n                        <Modal.Title>\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\n                        </Modal.Title>\n                        <div className=\"right-side\">\n                            <div className=\"chi-nhanh\">\n                                <p>Chi nhánh</p>\n                                <h4>31NDC.001</h4>\n                            </div>\n                            <div className=\"thanh-toan\">\n                                <p>Cần thanh toán</p>\n                                <h4>{this.toCurrency(this.state.totalMoneyPay)}</h4>\n                            </div>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body className=\"phieuthu-body\">\n                    {!this.state.isConfirm ? (\n                    <section id=\"phieuthu-step1\">\n\n                        <section id=\"section-thanh-toan\">\n                            <Form.Group>\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\n                                    <div className=\"field-input required\">\n                                        <span>Số tiền</span>\n                                        <Form.Control name=\"moneyPay\"\n                                            value={this.state.moneyPay}\n                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                            onBlur={this.calcRestMoney}\n                                            required\n                                            placeholder=\"0\" type=\"text\" />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Điền thông tin được yêu cầu\n                                        </Form.Control.Feedback>\n                                    </div>\n                                    <div className=\"field-input rest-money\">\n                                        <span>Còn lại</span>\n                                        <Form.Control \n                                            value={this.toCurrency(this.state.restMoneyPay)}\n                                            placeholder=\"0\" type=\"text\" disabled/>\n                                    </div>\n                            </Form.Group>\n                        </section>\n\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\n                        <section id=\"section-phuongthuc\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleShowTableResult('openPayMethod')}>\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <div className=\"section-phuongthuc-wrapper\">\n                                    <Form.Group controlId=\"cashCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                   className=\"custom-control-input\" id=\"cashCheck\"\n                                                   name=\"cashCheck\"\n                                                   checked={this.state.cashCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt</label>\n                                        </div>                                        \n                                        {this.state.cashCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input required\">\n                                                    <span>Số tiền:</span>\n                                                    <Form.Control name=\"cashMethod\"\n                                                        value={this.state.cashMethod}\n                                                        onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                                        onBlur={this.calcRestMoney}\n                                                        required\n                                                        placeholder=\"0\" type=\"text\" />\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        Điền thông tin được yêu cầu\n                                                    </Form.Control.Feedback>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"group-card\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                    className=\"custom-control-input\" id=\"cardCheck\"\n                                                    name=\"cardCheck\"\n                                                    checked={this.state.cardCheck}\n                                                    onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ</label>\n                                        </div> \n                                        {this.state.cardCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    <div className=\"field-input required\">\n                                                        <span>Số tiền</span>\n                                                        <Form.Control name=\"cardMethod\"\n                                                            value={this.state.cardMethod}\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                                            onBlur={this.calcRestMoney}\n                                                            required\n                                                            placeholder=\"0\" type=\"text\" />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Điền thông tin được yêu cầu\n                                                        </Form.Control.Feedback>\n                                                    </div>\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"cardBank\" \n                                                        defaultValue=\"Viettel QR Code\"\n                                                        value={this.state.cardBank} \n                                                        onChange={this.handleInputChange}>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"VNPT QR Code\">VNPT QR Code</option>\n                                                        <option value=\"FPT QR Code\">FPT QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div> \n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"group-transfer\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                className=\"custom-control-input\" id=\"transferCheck\"\n                                                name=\"transferCheck\"\n                                                checked={this.state.transferCheck}\n                                                onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản</label>\n                                        </div>\n                                        {this.state.transferCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    <div className=\"field-input required\">\n                                                        <span>Số tiền</span>\n                                                        <Form.Control name=\"transferMethod\"\n                                                            value={this.state.transferMethod}\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                                            onBlur={this.calcRestMoney}\n                                                            required\n                                                            placeholder=\"0\" type=\"text\" />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Điền thông tin được yêu cầu\n                                                        </Form.Control.Feedback>\n                                                    </div>\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"transferBank\"\n                                                        defaultValue=\"VCB Biên Hòa\"\n                                                         value={this.state.transferBank} \n                                                         onChange={this.handleInputChange}>\n                                                        <option value=\"VCB Biên Hòa\">VCB Biên Hòa</option>\n                                                        <option value=\"BIDV HCM\">BIDV HCM</option>\n                                                        <option value=\"Vietin Bank\">Vietin Bank</option>\n                                                        <option value=\"ACB\">ACB</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                </div>\n                            </Accordion.Collapse>\n                                {isShowMethodTable && \n                                    <React.Fragment>\n                                        <div className=\"table-result\">\n                                            {this.state.cashCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Tiền mặt\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    \n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                            {this.state.cardCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Thẻ\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.cardBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                            {this.state.transferCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Chuyển khoản\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.transferBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                        </div>\n                                    </React.Fragment>\n                                }\n                        </section>\n\n                        <section id=\"section-insurance\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleShowTableResult('openInsuranceMethod')}>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <section className=\"section-insurance-wrapper\">\n                                    <Form.Group className=\"insurance\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"insuranceCheck\"\n                                                   name=\"insuranceCheck\"\n                                                   checked={this.state.insuranceCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\n                                        </div> \n                                        {this.state.insuranceCheck && <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"insurance\" \n                                                        defaultValue=\"TNHH DV Nam Á\"\n                                                        value={this.state.insurance} \n                                                        onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"insuranceService\" \n                                                        defaultValue=\"Bàn chải kẽ chỉnh nha\"\n                                                        value={this.state.insuranceService} \n                                                        onChange={this.handleInputChange}>\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Kem ống\">Kem ống</option>\n                                                        <option value=\"Kem chải\">Kem chải</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <div className=\"field-input required\">\n                                                        <span>Số tiền</span>\n                                                        <Form.Control name=\"insuranceServicePrice\"\n                                                            value={this.state.insuranceServicePrice}\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                                            onBlur={this.calcRestMoney}\n                                                            required\n                                                            placeholder=\"0\" type=\"text\" />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Điền thông tin được yêu cầu\n                                                        </Form.Control.Feedback>\n                                                    </div>                                               \n                                                </div>\n                                                <i className=\"ic ic-remove\"></i>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"company\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"companyCheck\"\n                                                   name=\"companyCheck\"\n                                                   checked={this.state.companyCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\n                                        </div> \n                                        {this.state.companyCheck && <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"company\" \n                                                        defaultValue=\"TNHH DV Nam Á\"\n                                                        value={this.state.company} \n                                                        onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"companyService\" \n                                                        defaultValue=\"Bàn chải kẽ chỉnh nha\"\n                                                        value={this.state.companyService} \n                                                        onChange={this.handleInputChange}>\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Kem ống\">Kem ống</option>\n                                                        <option value=\"Kem chải\">Kem chải</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <div className=\"field-input required\">\n                                                        <span>Số tiền</span>\n                                                        <Form.Control name=\"companyServicePrice\"\n                                                            value={this.state.companyServicePrice}\n                                                            onChange={(e) => {this.handleInputChange(e, 'currency')} }\n                                                            onBlur={this.calcRestMoney}\n                                                            required\n                                                            placeholder=\"0\" type=\"text\" />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Điền thông tin được yêu cầu\n                                                        </Form.Control.Feedback>\n                                                    </div>                                               \n                                                </div>\n                                                <i className=\"ic ic-remove\"></i>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"thekim\" controlId=\"theKIMCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                   className=\"custom-control-input\" id=\"theKIMCheck\"\n                                                   name=\"theKIMCheck\"\n                                                   checked={this.state.theKIMCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"theKIMCheck\">Thẻ KIM</label>\n                                        </div>                                        \n                                        {this.state.theKIMCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input required no-label thekim-code\">\n                                                    <Form.Control \n                                                        name=\"theKIMCode\"\n                                                        value={this.state.theKIMCode}\n                                                        onChange={this.handleInputChange}\n                                                        required\n                                                        placeholder=\"Nhập mã thẻ\" type=\"text\" />\n                                                </div>\n                                                <div className=\"field-input no-label required thekim-pin\">\n                                                    <Form.Control \n                                                        name=\"theKIMPIN\"\n                                                        value={this.state.theKIMPIN}\n                                                        onChange={this.handleInputChange}\n                                                        required\n                                                        placeholder=\"Mã PIN\" type=\"text\" />\n                                                </div>\n                                                <div className=\"field-input thekim-btn\">\n                                                    <button className=\"btn btn-azure\">KIỂM TRA MÃ PIN</button>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                </section>\n                            </Accordion.Collapse>\n                            {isShowInsuranceTable && \n                                <React.Fragment>\n                                    <div className=\"table-result\">\n                                        {this.state.insuranceCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Bảo hiểm\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.insurance}</p>\n                                                <p className=\"sub\">{this.state.insuranceService}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.insuranceServicePayMoney)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\n                                            </div>\n                                        </div>}\n                                        {this.state.companyCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Công ty\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.company}</p>\n                                                <p className=\"sub\">{this.state.companyService}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.companyServicePayMoney)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\n                                            </div>\n                                        </div>\n                                        }\n                                    </div>\n                                </React.Fragment>\n                            }\n                        </section>\n                        </Accordion>\n                        <section id=\"ghichu\">\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Ghi chú</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" \n                                        name=\"keynote\"\n                                        value={this.state.keynote}\n                                        onChange={this.handleInputChange}/>\n                            </Form.Group>\n                        </section>\n                        <section id=\"phieuthu-errors\">\n                            <React.Fragment>\n                                {!this.state.validatedRestMoney &&  <Form.Control.Feedback type=\"invalid\">\n                                    Số tiền nhập vượt quá số tiền còn lại\n                                    </Form.Control.Feedback>\n                                }\n                                {!this.state.validatedIsEnoughMoneyPay &&  <Form.Control.Feedback type=\"invalid\">\n                                    Chưa thanh toán đủ số tiền\n                                    </Form.Control.Feedback>\n                                }\n                            </React.Fragment>\n                        </section>\n                    </section> \n                    ) :\n                    (<section id=\"phieuthu-step2\">\n                            <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        <p className=\"sub\">Ghi chú</p>\n                                        <p>{this.state.keynote}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"sub\">Khách thanh toán</p>\n                                        <p className=\"head\">\n                                            {this.toCurrency(this.state.moneyPay)}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {(this.cashCheck || this.state.cardCheck || this.state.transferCheck) && <React.Fragment>\n                                    <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                                    <div className=\"table-result\">\n                                        {this.state.cashCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Tiền mặt\n                                            </div>\n                                            <div className=\"result-col\">\n                                                \n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\n                                            </div>\n                                        </div>\n                                        }\n                                        {this.state.cardCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Thẻ\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.cardBank}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\n                                            </div>\n                                        </div>\n                                        }\n                                        {this.state.transferCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Chuyển khoản\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.transferBank}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\n                                            </div>\n                                        </div>\n                                        }\n                                    </div>\n                                </React.Fragment>\n                            }\n\n                            {(this.state.insuranceCheck || this.state.companyCheck) && <React.Fragment>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                                <div className=\"table-result\">\n                                {this.state.insuranceCheck && <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Bảo hiểm\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">{this.state.insurance}</p>\n                                        <p className=\"sub\">{this.state.insuranceService}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\n                                        <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\n                                    </div>\n                                </div>}\n                                {this.state.companyCheck && <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Công ty\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">{this.state.company}</p>\n                                        <p className=\"sub\">{this.state.companyService}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">{this.toCurrency(this.state.companyServicePrice)}</p>\n                                        <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\n                                    </div>\n                                </div>\n                                }\n                            </div>\n                            </React.Fragment>}\n                        </section>\n                    )}\n                    </Modal.Body>\n                        {this.state.isConfirm ?\n                        (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.handleConfirm}>Quay lại</Button>\n                                <Button className=\"btn-submit\" type=\"button\" onClick={this.onSubmit}>Tạo phiếu thu</Button>\n                            </Modal.Footer>                       \n                        ) : (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\n                                <Button className=\"btn-submit btn-azure\" type=\"submit\" >Xác nhận</Button>\n                            </Modal.Footer>\n                        )}\n            </Form>\n            </Modal>\n\n        );\n    }\n}\n","import React from 'react';\nimport PhieuThuPopup from './phieuthu/phieuthu';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { modalShow: false };\n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <div>\n        <Button\n          variant=\"primary\"\n          onClick={() => this.setState({ modalShow: true })}\n        >\n          Launch vertically centered modal\n        </Button>\n\n        <PhieuThuPopup\n          show={this.state.modalShow}\n          onHide={modalClose}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}