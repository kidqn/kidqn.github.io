{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","cashCheck","cashMethod","cardCheck","cardMethod","cardBank","transferCheck","transferMethod","transferBank","restMoneyPay","insurance","insuranceCheck","insuranceService","insuranceServicePrice","insuranceServiceExtra","insuranceServiceExtraPrice","companyCheck","note","isConfirm","handleInputChange","bind","assertThisInitialized","handleConfirm","handleSubmit","handleShowTableResult","toggleEditing","event","_this2","target","value","type","checked","name","setState","defineProperty","newRestMoney","console","log","preventDefault","key","number","Intl","NumberFormat","maximumSignificantDigits","format","_this3","isShowMethodTable","isShowInsuranceTable","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","toCurrency","Body","id","node","Group","Label","Control","onChange","onBlur","placeholder","onFocus","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","Fragment","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a799225.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nexport default class PhieuThuPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            openPayMethod: true,\n            openInsuranceMethod: false,\n            totalMoneyPay: 45000000,\n            moneyPay: 0,\n            cashCheck: false,\n            cashMethod: 0,\n            cardCheck: false,\n            cardMethod: 0,\n            cardBank: '',\n            transferCheck: false,\n            transferMethod: 0,\n            transferBank: '',\n            restMoneyPay: 45000000,\n            insurance: '',\n            insuranceCheck: false,\n            insuranceService: '',\n            insuranceServicePrice: 0,\n            insuranceServiceExtra: '',\n            insuranceServiceExtraPrice: 0,\n            companyCheck: false,\n            note: '',\n            isConfirm: false\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleShowTableResult = this.handleShowTableResult.bind(this);\n        this.toggleEditing = this.toggleEditing.bind(this);\n\n      }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        }, () => {\n            const newRestMoney = this.state.totalMoneyPay - this.state.moneyPay;\n            this.setState({restMoneyPay: newRestMoney});\n        });\n    }\n    handleConfirm(event) {\n        console.log('Note: ' + this.state.note);\n        console.log('Cash method: ' + this.state.cashMethod);\n        console.log('Card: ' + this.state.cardMethod , this.state.cardBank);\n        console.log('Transfer: ' + this.state.transferMethod , this.state.transferBank);\n        event.preventDefault();\n        this.setState({isConfirm: !this.state.isConfirm});\n    }\n    handleSubmit(event) {\n        console.log('push to server');\n        event.preventDefault();\n    }\n    handleShowTableResult(key) {\n        if( key === 'openPayMethod') {\n            this.setState({\n                openPayMethod: !this.state.openPayMethod,\n                openInsuranceMethod: this.state.openPayMethod ? this.state.openInsuranceMethod :this.state.openPayMethod\n            })\n        }\n        if( key === 'openInsuranceMethod') {\n            this.setState({\n                openInsuranceMethod: !this.state.openInsuranceMethod,\n                openPayMethod: this.state.openInsuranceMethod ? this.state.openPayMethod :this.state.openInsuranceMethod\n            })\n        }\n    }\n\n    toCurrency(number) {\n        const formatter = new Intl.NumberFormat('en-US', \n            { maximumSignificantDigits: 3 });\n    \n        return formatter.format(number);\n    }\n\n    toggleEditing() {\n        this.setState({ isEditing: !this.state.isEditing });\n    }\n\n    render() {\n        const isEditing = this.state.isEditing;\n        const isShowMethodTable = !this.state.openPayMethod && (this.state.cashCheck || this.state.cardCheck || this.state.transferCheck);\n        const isShowInsuranceTable = !this.state.openInsuranceMethod && (this.state.insuranceCheck || this.state.companyCheck);\n        console.log('isShowMethodTable', this.state.openPayMethod);\n        console.log('isShowInsuranceTable', this.state.openInsuranceMethod);\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"phieuthu\"\n            >                \n            <Form \n                noValidate\n                onSubmit={this.handleSubmit}>\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\n                        <Modal.Title>\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\n                        </Modal.Title>\n                        <div className=\"right-side\">\n                            <div className=\"chi-nhanh\">\n                                <p>Chi nhánh</p>\n                                <h4>31NDC.001</h4>\n                            </div>\n                            <div className=\"thanh-toan\">\n                                <p>Cần thanh toán</p>\n                                <h4>{this.toCurrency(this.state.totalMoneyPay)}</h4>\n                            </div>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body className=\"phieuthu-body\">\n                    {!this.state.isConfirm ? (<section id=\"phieuthu-step1\">\n\n                        <section id=\"section-thanh-toan\">\n                            <Form.Group>\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\n                                {isEditing ? (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control name=\"moneyPay\" \n                                            value={this.state.moneyPay}\n                                            onChange={this.handleInputChange}\n                                            onBlur={this.toggleEditing}\n                                            placeholder=\"1,000,000\" type=\"number\" />\n                                    </div>\n                                ) : (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control\n                                            value={this.toCurrency(this.state.moneyPay)}\n                                            onFocus={this.toggleEditing}\n                                            placeholder=\"1,000,000\" type=\"text\" />\n                                    </div>\n                                )}\n\n                                <div className=\"field-input rest-money\">\n                                    <span>Còn lại</span>\n                                    <Form.Control \n                                        value={this.toCurrency(this.state.restMoneyPay)}\n                                        placeholder=\"1,000,000\" type=\"text\" disabled/>\n                                </div>\n                            </Form.Group>\n                        </section>\n\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\n                        <section id=\"section-phuongthuc\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleShowTableResult('openPayMethod')}>\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <div className=\"section-phuongthuc-wrapper\">\n                                    <Form.Group controlId=\"cashCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                   className=\"custom-control-input\" id=\"cashCheck\"\n                                                   name=\"cashCheck\"\n                                                   checked={this.state.cashCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt:</label>\n                                        </div>                                        \n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            {isEditing ? (\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control name=\"cashMethod\" \n                                                        value={this.state.cashMethod}\n                                                        onChange={this.handleInputChange}\n                                                        onBlur={this.toggleEditing}\n                                                        placeholder=\"10,000,000\" type=\"number\" />\n                                                </div>\n                                            ) : (\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control \n                                                        value={this.toCurrency(this.state.cashMethod)}\n                                                        onFocus={this.toggleEditing}\n                                                        placeholder=\"10,000,000\" type=\"text\" />\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"group-card\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                    className=\"custom-control-input\" id=\"cardCheck\"\n                                                    name=\"cardCheck\"\n                                                    checked={this.state.cardCheck}\n                                                    onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ:</label>\n                                        </div> \n                                        {this.state.cardCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"cardMethod\" \n                                                                value={this.state.cardMethod}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.cardMethod)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"cardBank\" value={this.state.cardBank} onChange={this.handleInputChange}>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"VNPT QR Code\">VNPT QR Code</option>\n                                                        <option value=\"FPT QR Code\">FPT QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div> \n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"group-transfer\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                className=\"custom-control-input\" id=\"transferCheck\"\n                                                name=\"transferCheck\"\n                                                checked={this.state.transferCheck}\n                                                onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản:</label>\n                                        </div>\n                                        {this.state.transferCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"transferMethod\" \n                                                                value={this.state.transferMethod}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.transferMethod)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"transferBank\" value={this.state.transferBank} onChange={this.handleInputChange}>\n                                                        <option value=\"VCB Biên Hòa\">VCB Biên Hòa</option>\n                                                        <option value=\"BIDV HCM\">BIDV HCM</option>\n                                                        <option value=\"Vietin Bank\">Vietin Bank</option>\n                                                        <option value=\"ACB\">ACB</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                </div>\n                            </Accordion.Collapse>\n                                {isShowMethodTable && \n                                    <React.Fragment>\n                                        <div className=\"table-result\">\n                                            <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Tiền mặt\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    \n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.state.cashMethod}</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Thẻ\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.cardBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.state.cardMethod}</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Chuyển khoản\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.transferBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.state.transferMethod}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </React.Fragment>\n                                }\n                        </section>\n\n                        <section id=\"section-insurance\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleShowTableResult('openInsuranceMethod')}>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <section className=\"section-insurance-wrapper\">\n                                    <Form.Group className=\"insurance\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"insuranceCheck\"\n                                                   name=\"insuranceCheck\"\n                                                   checked={this.state.insuranceCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\n                                        </div> \n                                        <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"insuranceService\" value={this.state.insuranceService} onChange={this.handleInputChange}>\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Kem ống\">Kem ống</option>\n                                                        <option value=\"Kem chải\">Kem chải</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"insuranceServicePrice\" \n                                                                value={this.state.insuranceServicePrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.insuranceServicePrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}                                                \n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"insuranceServiceExtra\" value={this.state.insuranceServiceExtra} onChange={this.handleInputChange}>\n                                                        <option value=\"Nhổ răng gây tê - R34\">Nhổ răng gây tê - R34</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Cạo vôi răng\">Cạo vôi răng</option>\n                                                        <option value=\"Tẩy trắng răng\">Tẩy trắng răng</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"insuranceServiceExtraPrice\" \n                                                                value={this.state.insuranceServiceExtraPrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.insuranceServiceExtraPrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}   \n                                                </div>\n                                                <i className=\"ic ic-remove\"></i>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"company\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"companyCheck\"\n                                                   name=\"companyCheck\"\n                                                   checked={this.state.companyCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\n                                        </div> \n                                    </Form.Group>\n                                </section>\n                            </Accordion.Collapse>\n                            {isShowInsuranceTable && \n                                <React.Fragment>\n                                    <div className=\"table-result\">\n                                        <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Bảo hiểm\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.insurance}</p>\n                                                <p className=\"sub\">{this.state.insuranceService}</p>\n                                                <p className=\"sub\">{this.state.insuranceServiceExtra}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">2,000,000</p>\n                                                <p className=\"sub\">{this.state.insuranceServicePrice}</p>\n                                                <p className=\"sub\">{this.state.insuranceServiceExtraPrice}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Công ty\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">CTY TNHH Thương mại và dịch vụLe Gourmet Pass</p>\n                                                <p className=\"sub\">Nhổ răng gây tê - R35</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">10,000,000</p>\n                                                <p className=\"sub\">1,000,000</p>\n                                            </div>\n                                        </div>\n                                </div>\n                                </React.Fragment>\n                            }\n                        </section>\n                        </Accordion>\n                        <section id=\"ghichu\">\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Ghi chú</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"3\" \n                                    name=\"note\"\n                                    value={this.state.note}\n                                    onChange={this.handleInputChange}/>\n                        </Form.Group>\n                        </section>\n                    </section> \n                    ) :\n                    (<section id=\"phieuthu-step2\">\n                            <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        <p className=\"sub\">Ghi chú</p>\n                                        <p>{this.state.node}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"sub\">Khách thanh toán</p>\n                                        <p className=\"head\">\n                                            {this.toCurrency(this.state.totalMoneyPay)}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Tiền mặt\n                                    </div>\n                                    <div className=\"result-col\">\n                                        \n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                    </div>\n                                </div>\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Thẻ\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">Viettel QR Code</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                    </div>\n                                </div>\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Chuyển khoản\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">VCB Biên Hòa</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Bảo hiểm\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">TNHH DV Nam Á</p>\n                                        <p className=\"sub\">Bàn chải kẽ chỉnh nha</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R34</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        10,000,000\n                                        <p className=\"sub\">1,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Công ty\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">CTY TNHH Thương mại và dịch vụLe Gourmet Pass</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R35</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                    )}\n                    </Modal.Body>\n                        {this.state.isConfirm ?\n                        (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.handleConfirm}>Quay lại</Button>\n                                <Button className=\"btn-submit\" type=\"submit\">Tạo phiếu thu</Button>\n                            </Modal.Footer>                       \n                        ) : (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\n                                <Button className=\"btn-submit\" type=\"button\" onClick={this.handleConfirm}>Xác nhận</Button>\n                            </Modal.Footer>\n                        )}\n            </Form>\n            </Modal>\n\n        );\n    }\n}\n","import React from 'react';\nimport PhieuThuPopup from './phieuthu/phieuthu';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { modalShow: false };\n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <div>\n        <Button\n          variant=\"primary\"\n          onClick={() => this.setState({ modalShow: true })}\n        >\n          Launch vertically centered modal\n        </Button>\n\n        <PhieuThuPopup\n          show={this.state.modalShow}\n          onHide={modalClose}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}