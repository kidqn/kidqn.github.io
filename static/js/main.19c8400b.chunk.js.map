{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","restMoneyPay","insurance","handleInputChange","bind","assertThisInitialized","handleConfirm","handleOpenMethods","toggleEditing","event","_this2","target","value","type","checked","name","setState","defineProperty","newRestMoney","console","log","preventDefault","key","number","Intl","NumberFormat","maximumSignificantDigits","format","_this3","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","toCurrency","Body","id","Group","Label","Control","onChange","onBlur","placeholder","onFocus","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","index_es","icon","faTrash","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19c8400b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nexport default class PhieuThuPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            openPayMethod: false,\n            openInsuranceMethod: false,\n            totalMoneyPay: 45000000,\n            moneyPay: 0,\n            restMoneyPay: 45000000,\n            insurance: ''\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleOpenMethods = this.handleOpenMethods.bind(this);\n        this.toggleEditing = this.toggleEditing.bind(this);\n\n      }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        }, () => {\n            const newRestMoney = this.state.totalMoneyPay - this.state.moneyPay;\n            this.setState({restMoneyPay: newRestMoney});\n        });\n    }\n    handleConfirm(event) {\n        console.log('An essay was submitted: ' + this.state.insurance);\n        event.preventDefault();\n    }\n\n    handleOpenMethods(key) {\n        this.setState({\n            [key]: !this.state[key]\n        })\n    }\n\n    toCurrency(number) {\n        const formatter = new Intl.NumberFormat('en-US', \n            { maximumSignificantDigits: 3 });\n    \n        return formatter.format(number);\n    }\n\n    toggleEditing() {\n        this.setState({ isEditing: !this.state.isEditing });\n    }\n\n    render() {\n        const isEditing = this.state.isEditing;\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"phieuthu\"\n            >                \n            <Form \n                noValidate\n                onSubmit={this.handleConfirm}>\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\n                        <Modal.Title>\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\n                        </Modal.Title>\n                        <div className=\"right-side\">\n                            <div className=\"chi-nhanh\">\n                                <p>Chi nhánh</p>\n                                <h4>31NDC.001</h4>\n                            </div>\n                            <div className=\"thanh-toan\">\n                                <p>Cần thanh toán</p>\n                                <h4>{this.toCurrency(this.state.totalMoneyPay)}</h4>\n                            </div>\n                        </div>\n                    </Modal.Header>\n\n                    <Modal.Body className=\"phieuthu-body\">\n                        <section id=\"section-thanh-toan\">\n                            <Form.Group>\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\n                                {isEditing ? (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control name=\"moneyPay\" \n                                            value={this.state.moneyPay}\n                                            onChange={this.handleInputChange}\n                                            onBlur={this.toggleEditing}\n                                            placeholder=\"1,000,000\" type=\"number\" />\n                                    </div>\n                                ) : (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control name=\"moneyPay\" \n                                            value={this.toCurrency(this.state.moneyPay)}\n                                            onFocus={this.toggleEditing.bind(this)}\n                                            placeholder=\"1,000,000\" type=\"text\" />\n                                    </div>\n                                )}\n\n                                <div className=\"field-input rest-money\">\n                                    <span>Còn lại</span>\n                                    <Form.Control \n                                        value={this.toCurrency(this.state.restMoneyPay)}\n                                        placeholder=\"1,000,000\" type=\"number\" disabled/>\n                                </div>\n                            </Form.Group>\n                        </section>\n\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\n                        <section id=\"section-phuongthuc\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleOpenMethods('openPayMethod')}>\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <div className=\"section-phuongthuc-wrapper\">\n                                    <Form.Group controlId=\"cashCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cashCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt:</label>\n                                        </div>                                        \n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"group-cash\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cardCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ:</label>\n                                        </div> \n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                        <div className=\"field-input select\">\n                                            <span>Ngân hàng:</span>\n                                            <Form.Control as=\"select\">\n                                                <option>Viettel QR Code</option>\n                                                <option>VNPT QR Code</option>\n                                                <option>FPT QR Code</option>\n                                                <option>Viettel QR Code</option>\n                                                <option>Viettel QR Code</option>\n                                            </Form.Control>\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"group-transfer\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"transferCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản:</label>\n                                        </div>\n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                        <div className=\"field-input select\">\n                                            <span>Ngân hàng:</span>\n                                            <Form.Control as=\"select\">\n                                                <option>VCB Biên Hòa</option>\n                                                <option>BIDV HCM</option>\n                                                <option>Vietin Bank</option>\n                                                <option>ACB</option>\n                                                <option>Viettel QR Code</option>\n                                            </Form.Control>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </Accordion.Collapse>\n                                {this.state.openPayMethod && <div className=\"table-result\">\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Tiền mặt\n                                        </div>\n                                        <div className=\"result-col\">\n                                            \n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Thẻ\n                                        </div>\n                                        <div className=\"result-col\">\n                                            <p className=\"head\">Viettel QR Code</p>\n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Chuyển khoản\n                                        </div>\n                                        <div className=\"result-col\">\n                                            <p className=\"head\">VCB Biên Hòa</p>\n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                </div> }\n                        </section>\n                        <section id=\"section-insurance\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleOpenMethods('openInsuranceMethod')}>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <section className=\"section-insurance-wrapper\">\n                                    <Form.Group className=\"insurance\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"insuranceCheck\" name=\"company\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\n                                        </div> \n                                        <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\">\n                                                        <option>Bàn chải kẽ chỉnh nha</option>\n                                                        <option>Bàn chải kẽ </option>\n                                                        <option>Kem ống</option>\n                                                        <option>Kem chải</option>\n                                                        <option>Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\">\n                                                        <option>Nhổ răng gây tê - R34</option>\n                                                        <option>Bàn chải kẽ </option>\n                                                        <option>Cạo vôi răng</option>\n                                                        <option>Tẩy trắng răng</option>\n                                                        <option>Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                                </div>\n                                                <FontAwesomeIcon className=\"ic ic-remove\" icon={faTrash} />\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"company\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"companyCheck\" name=\"company\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\n                                        </div> \n                                    </Form.Group>\n                                </section>\n                            </Accordion.Collapse>\n                            {this.state.openInsuranceMethod && <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Bảo hiểm\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">TNHH DV Nam Á</p>\n                                        <p className=\"sub\">Bàn chải kẽ chỉnh nha</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R34</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        10,000,000\n                                        <p className=\"sub\">1,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Công ty\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">CTY TNHH Thương mại và dịch vụLe Gourmet Pass</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R35</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                            </div> }\n                        </section>\n                        </Accordion>\n                        <section id=\"ghichu\">\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Ghi chú</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"3\" />\n                        </Form.Group>\n                        </section>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\n                        <Button className=\"btn-submit\" type=\"submit\">Xác nhận</Button>\n                    </Modal.Footer>\n            </Form>\n            </Modal>\n\n        );\n    }\n}\n","import React from 'react';\nimport PhieuThuPopup from './phieuthu/phieuthu';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { modalShow: false };\n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <div>\n        <Button\n          variant=\"primary\"\n          onClick={() => this.setState({ modalShow: true })}\n        >\n          Launch vertically centered modal\n        </Button>\n\n        <PhieuThuPopup\n          show={this.state.modalShow}\n          onHide={modalClose}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}