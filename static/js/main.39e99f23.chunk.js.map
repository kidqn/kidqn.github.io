{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","cashCheck","cashMethod","cardCheck","cardMethod","cardBank","transferCheck","transferMethod","transferBank","restMoneyPay","insurance","insuranceCheck","insuranceService","insuranceServicePrice","insuranceServiceExtra","insuranceServiceExtraPrice","insuranceServicePayMoney","companyCheck","company","companyService","companyServicePrice","companyServiceExtra","companyServiceExtraPrice","companyServicePayMoney","keynote","isConfirm","handleInputChange","bind","assertThisInitialized","handleConfirm","handleSubmit","handleShowTableResult","toggleEditing","event","_this2","target","value","type","checked","parseInt","name","setState","defineProperty","newRestMoney","console","log","newInsuranceServiceMoney","newCompanyServiceMoney","preventDefault","key","number","Intl","NumberFormat","maximumSignificantDigits","format","_this3","isShowMethodTable","isShowInsuranceTable","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","toCurrency","Body","id","Group","Label","Control","onChange","onBlur","placeholder","onFocus","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","Fragment","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39e99f23.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nexport default class PhieuThuPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            openPayMethod: true,\n            openInsuranceMethod: false,\n            totalMoneyPay: 45000000,\n            moneyPay: 0,\n            cashCheck: false,\n            cashMethod: 0,\n            cardCheck: false,\n            cardMethod: 0,\n            cardBank: '',\n            transferCheck: false,\n            transferMethod: 0,\n            transferBank: '',\n            restMoneyPay: 45000000,\n            insurance: '',\n            insuranceCheck: false,\n            insuranceService: '',\n            insuranceServicePrice: 0,\n            insuranceServiceExtra: '',\n            insuranceServiceExtraPrice: 0,\n            insuranceServicePayMoney: 0,\n            companyCheck: false,\n            company: '',\n            companyService: '',\n            companyServicePrice: 0,\n            companyServiceExtra: '',\n            companyServiceExtraPrice: 0,\n            companyServicePayMoney: 0,\n            keynote: '',\n            isConfirm: false\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleShowTableResult = this.handleShowTableResult.bind(this);\n        this.toggleEditing = this.toggleEditing.bind(this);\n\n      }\n\n    handleInputChange(event) {\n        const target = event.target;\n        let value =  target.value;\n        if(target.type === 'checkbox') {\n            value = target.checked;\n        }\n        if(target.type === 'number') {\n            value = parseInt(target.value)\n        }\n        \n        const name = target.name;\n\n        this.setState({\n            [name]: value \n        }, () => {\n            const newRestMoney = this.state.totalMoneyPay - this.state.moneyPay;\n            console.log('subtract', this.state.totalMoneyPay, this.state.moneyPay);\n            const newInsuranceServiceMoney = this.state.insuranceServicePrice + this.state.insuranceServiceExtraPrice;\n            console.log('add', this.state.insuranceServicePrice, this.state.insuranceServiceExtraPrice);\n            const newCompanyServiceMoney = this.state.companyServicePrice + this.state.companyServiceExtraPrice;\n            this.setState({\n                restMoneyPay: newRestMoney,\n                insuranceServicePayMoney: newInsuranceServiceMoney,\n                companyServicePayMoney: newCompanyServiceMoney\n            });\n        });\n    }\n    handleConfirm(event) {\n        console.log('Note: ' + this.state.keynote);\n        console.log('Cash method: ' + this.state.cashMethod);\n        console.log('Card: ' + this.state.cardMethod , this.state.cardBank);\n        console.log('Transfer: ' + this.state.transferMethod , this.state.transferBank);\n        event.preventDefault();\n        this.setState({\n            isConfirm: !this.state.isConfirm,\n            openPayMethod: true,\n            openInsuranceMethod: false\n        });\n    }\n    handleSubmit(event) {\n        console.log('push to server');\n        event.preventDefault();\n    }\n    handleShowTableResult(key) {\n        if( key === 'openPayMethod') {\n            this.setState({\n                openPayMethod: !this.state.openPayMethod,\n                openInsuranceMethod: this.state.openPayMethod ? this.state.openInsuranceMethod :this.state.openPayMethod\n            })\n        }\n        if( key === 'openInsuranceMethod') {\n            this.setState({\n                openInsuranceMethod: !this.state.openInsuranceMethod,\n                openPayMethod: this.state.openInsuranceMethod ? this.state.openPayMethod :this.state.openInsuranceMethod\n            })\n        }\n    }\n\n    toCurrency(number) {\n        const formatter = new Intl.NumberFormat('en-US', \n            { maximumSignificantDigits: 3 });\n    \n        return formatter.format(number);\n    }\n\n    toggleEditing() {\n        this.setState({ isEditing: !this.state.isEditing });\n    }\n\n    render() {\n        const isEditing = this.state.isEditing;\n        const isShowMethodTable = !this.state.openPayMethod && (this.state.cashCheck || this.state.cardCheck || this.state.transferCheck);\n        const isShowInsuranceTable = !this.state.openInsuranceMethod && (this.state.insuranceCheck || this.state.companyCheck);\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"phieuthu\"\n            >                \n            <Form \n                noValidate\n                onSubmit={this.handleSubmit}>\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\n                        <Modal.Title>\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\n                        </Modal.Title>\n                        <div className=\"right-side\">\n                            <div className=\"chi-nhanh\">\n                                <p>Chi nhánh</p>\n                                <h4>31NDC.001</h4>\n                            </div>\n                            <div className=\"thanh-toan\">\n                                <p>Cần thanh toán</p>\n                                <h4>{this.toCurrency(this.state.totalMoneyPay)}</h4>\n                            </div>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body className=\"phieuthu-body\">\n                    {!this.state.isConfirm ? (\n                    <section id=\"phieuthu-step1\">\n\n                        <section id=\"section-thanh-toan\">\n                            <Form.Group>\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\n                                {isEditing ? (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control name=\"moneyPay\" \n                                            value={this.state.moneyPay}\n                                            onChange={this.handleInputChange}\n                                            onBlur={this.toggleEditing}\n                                            placeholder=\"1,000,000\" type=\"number\" />\n                                    </div>\n                                ) : (\n                                    <div className=\"field-input\">\n                                        <span>Số tiền</span>\n                                        <Form.Control\n                                            value={this.toCurrency(this.state.moneyPay)}\n                                            onFocus={this.toggleEditing}\n                                            placeholder=\"1,000,000\" type=\"text\" />\n                                    </div>\n                                )}\n\n                                <div className=\"field-input rest-money\">\n                                    <span>Còn lại</span>\n                                    <Form.Control \n                                        value={this.toCurrency(this.state.restMoneyPay)}\n                                        placeholder=\"1,000,000\" type=\"text\" disabled/>\n                                </div>\n                            </Form.Group>\n                        </section>\n\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\n                        <section id=\"section-phuongthuc\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleShowTableResult('openPayMethod')}>\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <div className=\"section-phuongthuc-wrapper\">\n                                    <Form.Group controlId=\"cashCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                   className=\"custom-control-input\" id=\"cashCheck\"\n                                                   name=\"cashCheck\"\n                                                   checked={this.state.cashCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt:</label>\n                                        </div>                                        \n                                        {this.state.cashCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"cashMethod\" \n                                                                value={this.state.cashMethod}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.cashMethod)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"group-card\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                    className=\"custom-control-input\" id=\"cardCheck\"\n                                                    name=\"cardCheck\"\n                                                    checked={this.state.cardCheck}\n                                                    onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ:</label>\n                                        </div> \n                                        {this.state.cardCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"cardMethod\" \n                                                                value={this.state.cardMethod}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.cardMethod)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"cardBank\" value={this.state.cardBank} onChange={this.handleInputChange}>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"VNPT QR Code\">VNPT QR Code</option>\n                                                        <option value=\"FPT QR Code\">FPT QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div> \n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"group-transfer\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" \n                                                className=\"custom-control-input\" id=\"transferCheck\"\n                                                name=\"transferCheck\"\n                                                checked={this.state.transferCheck}\n                                                onChange={this.handleInputChange}/>\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản:</label>\n                                        </div>\n                                        {this.state.transferCheck && \n                                            <React.Fragment>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền:</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"transferMethod\" \n                                                                value={this.state.transferMethod}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.transferMethod)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                                <div className=\"field-input select\">\n                                                    <span>Ngân hàng:</span>\n                                                    <Form.Control as=\"select\"  name=\"transferBank\" value={this.state.transferBank} onChange={this.handleInputChange}>\n                                                        <option value=\"VCB Biên Hòa\">VCB Biên Hòa</option>\n                                                        <option value=\"BIDV HCM\">BIDV HCM</option>\n                                                        <option value=\"Vietin Bank\">Vietin Bank</option>\n                                                        <option value=\"ACB\">ACB</option>\n                                                        <option value=\"Viettel QR Code\">Viettel QR Code</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </Form.Group>\n                                </div>\n                            </Accordion.Collapse>\n                                {isShowMethodTable && \n                                    <React.Fragment>\n                                        <div className=\"table-result\">\n                                            {this.state.cashCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Tiền mặt\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    \n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                            {this.state.cardCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Thẻ\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.cardBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                            {this.state.transferCheck && <div className=\"result-row\">\n                                                <div className=\"result-col label\">\n                                                    Chuyển khoản\n                                                </div>\n                                                <div className=\"result-col\">\n                                                    <p className=\"head\">{this.state.transferBank}</p>\n                                                </div>\n                                                <div className=\"result-col number\">\n                                                    <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\n                                                </div>\n                                            </div>\n                                            }\n                                        </div>\n                                    </React.Fragment>\n                                }\n                        </section>\n\n                        <section id=\"section-insurance\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleShowTableResult('openInsuranceMethod')}>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <section className=\"section-insurance-wrapper\">\n                                    <Form.Group className=\"insurance\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"insuranceCheck\"\n                                                   name=\"insuranceCheck\"\n                                                   checked={this.state.insuranceCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\n                                        </div> \n                                        {this.state.insuranceCheck && <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"insuranceService\" value={this.state.insuranceService} onChange={this.handleInputChange}>\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Kem ống\">Kem ống</option>\n                                                        <option value=\"Kem chải\">Kem chải</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"insuranceServicePrice\" \n                                                                value={this.state.insuranceServicePrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.insuranceServicePrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}                                                \n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"insuranceServiceExtra\" value={this.state.insuranceServiceExtra} onChange={this.handleInputChange}>\n                                                        <option value=\"Nhổ răng gây tê - R34\">Nhổ răng gây tê - R34</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Cạo vôi răng\">Cạo vôi răng</option>\n                                                        <option value=\"Tẩy trắng răng\">Tẩy trắng răng</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"insuranceServiceExtraPrice\" \n                                                                value={this.state.insuranceServiceExtraPrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.insuranceServiceExtraPrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}   \n                                                </div>\n                                                <i className=\"ic ic-remove\"></i>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                        }\n                                    </Form.Group>\n                                    <Form.Group className=\"company\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input  type=\"checkbox\"\n                                                   className=\"custom-control-input\" id=\"companyCheck\"\n                                                   name=\"companyCheck\"\n                                                   checked={this.state.companyCheck}\n                                                   onChange={this.handleInputChange} \n                                            />\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\n                                        </div> \n                                        {this.state.companyCheck && <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"company\" value={this.state.company} onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"companyService\" value={this.state.companyService} onChange={this.handleInputChange}>\n                                                        <option value=\"Bàn chải kẽ chỉnh nha\">Bàn chải kẽ chỉnh nha</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Kem ống\">Kem ống</option>\n                                                        <option value=\"Kem chải\">Kem chải</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"companyServicePrice\" \n                                                                value={this.state.companyServicePrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.companyServicePrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}                                                \n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\" name=\"companyServiceExtra\" value={this.state.companyServiceExtra} onChange={this.handleInputChange}>\n                                                        <option value=\"Nhổ răng gây tê - R34\">Nhổ răng gây tê - R34</option>\n                                                        <option value=\"Bàn chải kẽ\">Bàn chải kẽ </option>\n                                                        <option value=\"Cạo vôi răng\">Cạo vôi răng</option>\n                                                        <option value=\"Tẩy trắng răng\">Tẩy trắng răng</option>\n                                                        <option value=\"Bàn chải kẽ chỉnh răng\">Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    {isEditing ? (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control name=\"companyServiceExtraPrice\" \n                                                                value={this.state.companyServiceExtraPrice}\n                                                                onChange={this.handleInputChange}\n                                                                onBlur={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"number\" />\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"field-input\">\n                                                            <span>Số tiền</span>\n                                                            <Form.Control \n                                                                value={this.toCurrency(this.state.companyServiceExtraPrice)}\n                                                                onFocus={this.toggleEditing}\n                                                                placeholder=\"10,000,000\" type=\"text\" />\n                                                        </div>\n                                                    )}   \n                                                </div>\n                                                <i className=\"ic ic-remove\"></i>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                        }\n                                    </Form.Group>\n                                </section>\n                            </Accordion.Collapse>\n                            {isShowInsuranceTable && \n                                <React.Fragment>\n                                    <div className=\"table-result\">\n                                        {this.state.insuranceCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Bảo hiểm\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.insurance}</p>\n                                                <p className=\"sub\">{this.state.insuranceService}</p>\n                                                <p className=\"sub\">{this.state.insuranceServiceExtra}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.insuranceServicePayMoney)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.insuranceServiceExtraPrice)}</p>\n                                            </div>\n                                        </div>}\n                                        {this.state.companyCheck && <div className=\"result-row\">\n                                            <div className=\"result-col label\">\n                                                Công ty\n                                            </div>\n                                            <div className=\"result-col\">\n                                                <p className=\"head\">{this.state.company}</p>\n                                                <p className=\"sub\">{this.state.companyService}</p>\n                                                <p className=\"sub\">{this.state.companyServiceExtra}</p>\n                                            </div>\n                                            <div className=\"result-col number\">\n                                                <p className=\"head\">{this.toCurrency(this.state.companyServicePayMoney)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\n                                                <p className=\"sub\">{this.toCurrency(this.state.companyServiceExtraPrice)}</p>\n                                            </div>\n                                        </div>\n                                        }\n                                    </div>\n                                </React.Fragment>\n                            }\n                        </section>\n                        </Accordion>\n                        <section id=\"ghichu\">\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Ghi chú</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" \n                                        name=\"keynote\"\n                                        value={this.state.keynote}\n                                        onChange={this.handleInputChange}/>\n                            </Form.Group>\n                        </section>\n                    </section> \n                    ) :\n                    (<section id=\"phieuthu-step2\">\n                            <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        <p className=\"sub\">Ghi chú</p>\n                                        <p>{this.state.keynote}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"sub\">Khách thanh toán</p>\n                                        <p className=\"head\">\n                                            {this.toCurrency(this.state.restMoneyPay)}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            <div className=\"table-result\">\n                                {this.state.cashCheck && <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Tiền mặt\n                                    </div>\n                                    <div className=\"result-col\">\n                                        \n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">{this.toCurrency(this.state.cashMethod)}</p>\n                                    </div>\n                                </div>\n                                }\n                                {this.state.cardCheck && <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Thẻ\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">{this.state.cardBank}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">{this.toCurrency(this.state.cardMethod)}</p>\n                                    </div>\n                                </div>\n                                }\n                                {this.state.transferCheck && <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Chuyển khoản\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">{this.state.transferBank}</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">{this.toCurrency(this.state.transferMethod)}</p>\n                                    </div>\n                                </div>\n                                }\n                            </div>\n\n                            <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            <div className=\"table-result\">\n                            {this.state.insuranceCheck && <div className=\"result-row\">\n                                <div className=\"result-col label\">\n                                    Bảo hiểm\n                                </div>\n                                <div className=\"result-col\">\n                                    <p className=\"head\">{this.state.insurance}</p>\n                                    <p className=\"sub\">{this.state.insuranceService}</p>\n                                    <p className=\"sub\">{this.state.insuranceServiceExtra}</p>\n                                </div>\n                                <div className=\"result-col number\">\n                                    <p className=\"head\">{this.toCurrency(this.state.insuranceServicePayMoney)}</p>\n                                    <p className=\"sub\">{this.toCurrency(this.state.insuranceServicePrice)}</p>\n                                    <p className=\"sub\">{this.toCurrency(this.state.insuranceServiceExtraPrice)}</p>\n                                </div>\n                            </div>}\n                            {this.state.companyCheck && <div className=\"result-row\">\n                                <div className=\"result-col label\">\n                                    Công ty\n                                </div>\n                                <div className=\"result-col\">\n                                    <p className=\"head\">{this.state.company}</p>\n                                    <p className=\"sub\">{this.state.companyService}</p>\n                                    <p className=\"sub\">{this.state.companyServiceExtra}</p>\n                                </div>\n                                <div className=\"result-col number\">\n                                    <p className=\"head\">{this.toCurrency(this.state.companyServicePayMoney)}</p>\n                                    <p className=\"sub\">{this.toCurrency(this.state.companyServicePrice)}</p>\n                                    <p className=\"sub\">{this.toCurrency(this.state.companyServiceExtraPrice)}</p>\n                                </div>\n                            </div>\n                            }\n                        </div>\n                        </section>\n                    )}\n                    </Modal.Body>\n                        {this.state.isConfirm ?\n                        (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.handleConfirm}>Quay lại</Button>\n                                <Button className=\"btn-submit\" type=\"submit\">Tạo phiếu thu</Button>\n                            </Modal.Footer>                       \n                        ) : (\n                            <Modal.Footer>\n                                <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\n                                <Button className=\"btn-submit\" type=\"button\" onClick={this.handleConfirm}>Xác nhận</Button>\n                            </Modal.Footer>\n                        )}\n            </Form>\n            </Modal>\n\n        );\n    }\n}\n","import React from 'react';\nimport PhieuThuPopup from './phieuthu/phieuthu';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { modalShow: false };\n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <div>\n        <Button\n          variant=\"primary\"\n          onClick={() => this.setState({ modalShow: true })}\n        >\n          Launch vertically centered modal\n        </Button>\n\n        <PhieuThuPopup\n          show={this.state.modalShow}\n          onHide={modalClose}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}