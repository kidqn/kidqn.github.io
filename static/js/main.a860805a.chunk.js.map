{"version":3,"sources":["phieuthu/phieuthu.js","App.js","serviceWorker.js","index.js"],"names":["PhieuThuPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","openPayMethod","openInsuranceMethod","totalMoneyPay","moneyPay","restMoneyPay","insurance","handleInputChange","bind","assertThisInitialized","handleConfirm","handleOpenMethods","event","_this2","target","value","type","checked","name","setState","defineProperty","newRestMoney","console","log","preventDefault","key","_this3","react_default","a","createElement","Modal_default","assign","size","aria-labelledby","centered","className","Form_default","noValidate","onSubmit","Header","closeButton","Title","Body","id","Group","Label","Control","onChange","placeholder","disabled","Accordion_default","defaultActiveKey","Toggle","as","Card","eventKey","onClick","Collapse","controlId","htmlFor","index_es","icon","faTrash","rows","Footer","Button_default","onHide","React","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","modalShow","variant","phieuthu_PhieuThuPopup","show","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a860805a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nexport default class PhieuThuPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openPayMethod: false,\n            openInsuranceMethod: false,\n            totalMoneyPay: 45000000,\n            moneyPay: 0,\n            restMoneyPay: 45000000,\n            insurance: ''\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleOpenMethods = this.handleOpenMethods.bind(this);\n      }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        }, () => {\n            const newRestMoney = this.state.totalMoneyPay - this.state.moneyPay;\n            this.setState({restMoneyPay: newRestMoney});\n        });\n    }\n    handleConfirm(event) {\n        console.log('An essay was submitted: ' + this.state.insurance);\n        event.preventDefault();\n    }\n\n    handleOpenMethods(key) {\n        this.setState({\n            [key]: !this.state[key]\n        })\n    }\n\n    render() {\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"phieuthu\"\n            >                \n            <Form \n                noValidate\n                onSubmit={this.handleConfirm}>\n                    <Modal.Header className=\"phieuthu-header\" closeButton>\n                        <Modal.Title>\n                            <h2 className=\"phieuthu-title\">Phiếu Thu</h2>\n                        </Modal.Title>\n                        <div className=\"right-side\">\n                            <div className=\"chi-nhanh\">\n                                <p>Chi nhánh</p>\n                                <h4>31NDC.001</h4>\n                            </div>\n                            <div className=\"thanh-toan\">\n                                <p>Cần thanh toán</p>\n                                <h4>{this.state.totalMoneyPay}</h4>\n                            </div>\n                        </div>\n                    </Modal.Header>\n\n                    <Modal.Body className=\"phieuthu-body\">\n                        <section id=\"section-thanh-toan\">\n                            <Form.Group>\n                                <Form.Label className=\"phieuthu-label\">Khách thanh toán</Form.Label>\n                                <div className=\"field-input\">\n                                    <span>Số tiền</span>\n                                    <Form.Control name=\"moneyPay\" \n                                        value={this.state.moneyPay}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"1,000,000\" type=\"number\" />\n                                </div>\n                                <div className=\"field-input rest-money\">\n                                    <span>Còn lại</span>\n                                    <Form.Control \n                                        value={this.state.restMoneyPay}\n                                        placeholder=\"1,000,000\" type=\"number\" disabled/>\n                                </div>\n                            </Form.Group>\n                        </section>\n\n                        <Accordion className=\"phieuthu-info\" defaultActiveKey=\"0\">\n                        <section id=\"section-phuongthuc\">\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={() => this.handleOpenMethods('openPayMethod')}>\n                                <h3 className=\"heading-middle-line\">Phương thức thanh toán</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <div className=\"section-phuongthuc-wrapper\">\n                                    <Form.Group controlId=\"cashCheckbox\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cashCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"cashCheck\">Tiền mặt:</label>\n                                        </div>                                        \n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"group-cash\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cardCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"cardCheck\">Thẻ:</label>\n                                        </div> \n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                        <div className=\"field-input select\">\n                                            <span>Ngân hàng:</span>\n                                            <Form.Control as=\"select\">\n                                                <option>Viettel QR Code</option>\n                                                <option>VNPT QR Code</option>\n                                                <option>FPT QR Code</option>\n                                                <option>Viettel QR Code</option>\n                                                <option>Viettel QR Code</option>\n                                            </Form.Control>\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"group-transfer\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"transferCheck\" name=\"example1\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"transferCheck\">Chuyển khoản:</label>\n                                        </div>\n                                        <div className=\"field-input\">\n                                            <span>Số tiền:</span>\n                                            <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                        </div>\n                                        <div className=\"field-input select\">\n                                            <span>Ngân hàng:</span>\n                                            <Form.Control as=\"select\">\n                                                <option>VCB Biên Hòa</option>\n                                                <option>BIDV HCM</option>\n                                                <option>Vietin Bank</option>\n                                                <option>ACB</option>\n                                                <option>Viettel QR Code</option>\n                                            </Form.Control>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </Accordion.Collapse>\n                                {this.state.openPayMethod && <div className=\"table-result\">\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Tiền mặt\n                                        </div>\n                                        <div className=\"result-col\">\n                                            \n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Thẻ\n                                        </div>\n                                        <div className=\"result-col\">\n                                            <p className=\"head\">Viettel QR Code</p>\n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"result-row\">\n                                        <div className=\"result-col label\">\n                                            Chuyển khoản\n                                        </div>\n                                        <div className=\"result-col\">\n                                            <p className=\"head\">VCB Biên Hòa</p>\n                                        </div>\n                                        <div className=\"result-col number\">\n                                            <p className=\"head\">10,000,000</p>\n                                        </div>\n                                    </div>\n                                </div> }\n                        </section>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\" onClick={() => this.handleOpenMethods('openInsuranceMethod')}>\n                                <h3 className=\"heading-middle-line\">Bảo hiểm và công ty liên kết</h3>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <section className=\"section-insurance-wrapper\">\n                                    <Form.Group className=\"insurance\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"insuranceCheck\" name=\"company\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"insuranceCheck\">Bảo hiểm</label>\n                                        </div> \n                                        <div className=\"right-side\">\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Công ty:</span>\n                                                    <Form.Control as=\"select\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange}>\n                                                        <option value=\"TNHH DV Nam Á\">TNHH DV Nam Á</option>\n                                                        <option value=\"TNHH DV Đông Á\">TNHH DV Đông Á</option>\n                                                        <option value=\"TNHH DV Bắc Á\">TNHH DV Bắc Á</option>\n                                                        <option value=\"TNHH DV Tây Á\">TNHH DV Tây Á</option>\n                                                        <option value=\"TNHH DV Á\">TNHH DV Á</option>\n                                                    </Form.Control>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\">\n                                                        <option>Bàn chải kẽ chỉnh nha</option>\n                                                        <option>Bàn chải kẽ </option>\n                                                        <option>Kem ống</option>\n                                                        <option>Kem chải</option>\n                                                        <option>Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <div className=\"field-input select\">\n                                                    <span>Dịch vụ:</span>\n                                                    <Form.Control as=\"select\">\n                                                        <option>Nhổ răng gây tê - R34</option>\n                                                        <option>Bàn chải kẽ </option>\n                                                        <option>Cạo vôi răng</option>\n                                                        <option>Tẩy trắng răng</option>\n                                                        <option>Bàn chải kẽ chỉnh răng</option>\n                                                    </Form.Control>\n                                                </div>\n                                                <div className=\"field-input\">\n                                                    <span>Số tiền</span>\n                                                    <Form.Control placeholder=\"10,000,000\" type=\"text\" />\n                                                </div>\n                                                <FontAwesomeIcon className=\"ic ic-remove\" icon={faTrash} />\n                                            </div>\n                                            <div className=\"form-group-row\">\n                                                <a className=\"add-new-insurance\"><i className=\"ic-add-new\"></i>Thêm mới</a>\n                                            </div>\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"company\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"companyCheck\" name=\"company\" />\n                                            <label className=\"custom-control-label\" htmlFor=\"companyCheck\">Công ty</label>\n                                        </div> \n                                    </Form.Group>\n                                </section>\n                            </Accordion.Collapse>\n                            {this.state.openInsuranceMethod && <div className=\"table-result\">\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Bảo hiểm\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">TNHH DV Nam Á</p>\n                                        <p className=\"sub\">Bàn chải kẽ chỉnh nha</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R34</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        10,000,000\n                                        <p className=\"sub\">1,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                                <div className=\"result-row\">\n                                    <div className=\"result-col label\">\n                                        Công ty\n                                    </div>\n                                    <div className=\"result-col\">\n                                        <p className=\"head\">CTY TNHH Thương mại và dịch vụLe Gourmet Pass</p>\n                                        <p className=\"sub\">Nhổ răng gây tê - R35</p>\n                                    </div>\n                                    <div className=\"result-col number\">\n                                        <p className=\"head\">10,000,000</p>\n                                        <p className=\"sub\">1,000,000</p>\n                                    </div>\n                                </div>\n                            </div> }\n                        </Accordion>\n\n                        <section id=\"ghichu\">\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Ghi chú</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"3\" />\n                        </Form.Group>\n                        </section>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className=\"btn-close\" onClick={this.props.onHide}>Thoát</Button>\n                        <Button className=\"btn-submit\" type=\"submit\">Xác nhận</Button>\n                    </Modal.Footer>\n            </Form>\n            </Modal>\n\n        );\n    }\n}\n","import React from 'react';\nimport PhieuThuPopup from './phieuthu/phieuthu';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { modalShow: false };\n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <div>\n        <Button\n          variant=\"primary\"\n          onClick={() => this.setState({ modalShow: true })}\n        >\n          Launch vertically centered modal\n        </Button>\n\n        <PhieuThuPopup\n          show={this.state.modalShow}\n          onHide={modalClose}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}